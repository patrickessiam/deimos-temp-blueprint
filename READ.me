
1: Manage external dependencies-related files, such as the dependencies themselves and their respective versions: version_catalogs vs buildSrc

2: use kotlin dsl in place of Groovy: use Kotlin as the language used in build files, guaranteeing type safety, code completion, and superior refactoring and documentation assistance

3: Why multi-modular approach ? : to make the project more manageable, to make it easier to reuse code, to make it easier to test, to make it easier to maintain, to make it easier to scale

4: What's the best modular approach ? : the one that fits your project, the one that fits your team, the one that fits your needs and your goals

5: Dependency across modules: api vs implementation

6: Providing a mix between version catalogs and buildSrc:

5: Annotation processing: KAPT vs KSP: (provide a link to the article)


6: Clean architecture the right way:
